ins_layer <- make_layer_f(20e6, 5e6)
xs_layer <- make_layer_f(400e6, 25e6)
ret_cost <- fn(N, ret_layer, jackpot1, jackpot2, tickets, bets)
xs_cost <- fn(N, xs_layer, jackpot1, jackpot2, tickets, bets)
ins_cost <- fn(N, ins_layer, jackpot1, jackpot2, tickets, bets)*(1+ipt)*multiple
total_cost <- ret_cost + ins_cost + xs_cost
c(retention = ret_cost, insurance = ins_cost, xs_retention = xs_cost, total = total_cost)/bets
}
special_cost(1.7, 0.12, 50, 0, 23887835.00, 42268189, 594704, ejs_spill)*594704
special_cost(1.7, 0.12, 50, 0, 23887833.2, 42268189, 594704, ejs_spill)*594704
special_cost(1.7, 0, 50, 0, 23887833.2, 42268189, 594704, ejs_spill)*594704
expected_loss <- function(N, layer_f, payout_fn, p_prob, s_prob, tickets, bets) {
nx <- 0:N
ny <- 1:N
probs <- outer(nx, ny, function(x, y){
p_prob(tickets, x) * s_prob(bets, y)
})
losses <- outer(nx, ny, function(x, y){
layer_f(payout_fn(x, y))
})
sum(probs * losses)
}
# generic total ground-up payout function given jackpot and divisor function
make_payout_f <- function(jackpot, divisor_f) {
function(x, y) {
y*jackpot/divisor_f(x,y)
}
}
# max payout function
max_payout_f <- function(jackpot) {
make_payout_f(jackpot, pmax)
}
# sum payout function
sum_payout_f <- function(jackpot) {
make_payout_f(jackpot, function(x,y){x+y})
}
# poisson density function
poisson_f <- function(odds) {
function(n, x) {
dpois(x, n/odds)
}
}
# returns a function that calculates losses in a layer with given capacity and retention/attachement point
make_layer_f <- function(capacity, retention) {
function(x) {
pmin(capacity, pmax(x - retention, 0))
}
}
# function for calculating the expected loss in a layer for a GLS 13th must go
gls_must_go <- function(N, ins_layer, jackpot1, jackpot2, tickets, bets) {
el <- expected_loss(N, ins_layer, max_payout_f(jackpot1 + jackpot2), poisson_f(15537573/0.9), poisson_f(15537573), tickets, bets)
el*dpois(0, (tickets + bets)/139838160)
}
# function for calculating the expected loss in a layer for a EJS spillover
ejs_spill <- function(N, ins_layer, jackpot1, jackpot2, tickets, bets) {
el <- expected_loss(N, ins_layer, max_payout_f(jackpot2), poisson_f(5959012), poisson_f(5959012), tickets, bets)
el
}
# function for calculating the expected loss in a layer for a EMS spillover
ems_spill <- function(N, ins_layer, jackpot1, jackpot2, tickets, bets) {
el <- expected_loss(N, ins_layer, sum_payout_f(jackpot2), poisson_f(6991908), poisson_f(6991908), tickets, bets)
el
}
# function for calculating the expected loss in a layer for a EMS 5th must go
ems_must_go <- function(N, ins_layer, jackpot1, jackpot2, tickets, bets) {
el_so <- expected_loss(N, ins_layer, sum_payout_f(jackpot2), poisson_f(6991908), poisson_f(6991908), tickets, bets)
el_pd <- expected_loss(N, ins_layer, sum_payout_f(jackpot1 + jackpot2), poisson_f(6991908/0.9), poisson_f(6991908), tickets, bets)
prob_pd <- dpois(0, (tickets + bets)/139838160)
prob_pd*el_pd + (1-prob_pd)*el_so
}
# function for calculating the total expected cost in our special insurance tower
# fn is one of the gls_must_go, ems_spill,... functions
special_cost <- function(multiple, ipt, N, jackpot1, jackpot2, tickets, bets, fn) {
ret_layer <- make_layer_f(5e6, 0)
ins_layer <- make_layer_f(20e6, 5e6)
xs_layer <- make_layer_f(400e6, 25e6)
ret_cost <- fn(N, ret_layer, jackpot1, jackpot2, tickets, bets)
xs_cost <- fn(N, xs_layer, jackpot1, jackpot2, tickets, bets)
ins_cost <- fn(N, ins_layer, jackpot1, jackpot2, tickets, bets)*(1+ipt)*multiple
total_cost <- ret_cost + ins_cost + xs_cost
c(retention = ret_cost, insurance = ins_cost, xs_retention = xs_cost, total = total_cost)/bets
}
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 580534, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 590534, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 600534, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 700534, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 800534, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 1000000, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 2000000, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 3000000, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 4000000, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 5000000, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 6000000, ejs_spill)
# Actual EJS 2nd Jan 2018
special_cost(1.7, 0.12, 50, 0, 20449935.1, 47338185, 10000000, ejs_spill)
special_cost(1.7, 0.12, 50, 35e6, 1e6, 38e6, 1, gls_must_go)
special_cost(1.7, 0.12, 50, 35e6, 1e6, 38e6, 100000, gls_must_go)
special_cost(1.7, 0.12, 50, 35e6, 1e6, 38e6, 200000, gls_must_go)
special_cost(1.7, 0.12, 50, 35e6, 1e6, 38e6, 300000, gls_must_go)
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
# this function calculates the following double summation
# sum_x sum_y ( layer_f(payout_fn(x,y)) * p_prob(tickets,x) * s_prob(bets, x) )
# layer_f is a function that takes one argument (the loss) and returns the loss in the layer
# payout_fn is a function that takes two arguments (primary winners and secondary winners) and returns the ground-up loss
# p_prob/s_prob is a function of two arguments (number of entries, number of winners) and returns the corresponding pdf
# tickets is the PURE primary tickets (ie excluding any bets bought via a primary channel)
expected_loss <- function(N, layer_f, payout_fn, p_prob, s_prob, tickets, bets) {
nx <- 0:N
ny <- 1:N
probs <- outer(nx, ny, function(x, y){
p_prob(tickets, x) * s_prob(bets, y)
})
losses <- outer(nx, ny, function(x, y){
layer_f(payout_fn(x, y))
})
sum(probs * losses)
}
# generic total ground-up payout function given jackpot and divisor function
make_payout_f <- function(jackpot, divisor_f) {
function(x, y) {
y*jackpot/divisor_f(x,y)
}
}
# max payout function
max_payout_f <- function(jackpot) {
make_payout_f(jackpot, pmax)
}
# sum payout function
sum_payout_f <- function(jackpot) {
make_payout_f(jackpot, function(x,y){x+y})
}
# poisson density function
poisson_f <- function(odds) {
function(n, x) {
dpois(x, n/odds)
}
}
# returns a function that calculates losses in a layer with given capacity and retention/attachement point
make_layer_f <- function(capacity, retention) {
function(x) {
pmin(capacity, pmax(x - retention, 0))
}
}
# function for calculating the expected loss in a layer for a GLS 13th must go
gls_must_go <- function(N, ins_layer, jackpot1, jackpot2, tickets, bets) {
el <- expected_loss(N, ins_layer, max_payout_f(jackpot1 + jackpot2), poisson_f(15537573/0.9), poisson_f(15537573), tickets, bets)
el*dpois(0, (tickets + bets)/139838160)
}
# function for calculating the expected loss in a layer for a EJS spillover
ejs_spill <- function(N, ins_layer, jackpot1, jackpot2, tickets, bets) {
el <- expected_loss(N, ins_layer, max_payout_f(jackpot2), poisson_f(5959012), poisson_f(5959012), tickets, bets)
el
}
# function for calculating the expected loss in a layer for a EMS spillover
ems_spill <- function(N, ins_layer, jackpot1, jackpot2, tickets, bets) {
el <- expected_loss(N, ins_layer, sum_payout_f(jackpot2), poisson_f(6991908), poisson_f(6991908), tickets, bets)
el
}
# function for calculating the expected loss in a layer for a EMS 5th must go
ems_must_go <- function(N, ins_layer, jackpot1, jackpot2, tickets, bets) {
el_so <- expected_loss(N, ins_layer, sum_payout_f(jackpot2), poisson_f(6991908), poisson_f(6991908), tickets, bets)
el_pd <- expected_loss(N, ins_layer, sum_payout_f(jackpot1 + jackpot2), poisson_f(6991908/0.9), poisson_f(6991908), tickets, bets)
prob_pd <- dpois(0, (tickets + bets)/139838160)
prob_pd*el_pd + (1-prob_pd)*el_so
}
# function for calculating the total expected cost in our special insurance tower
# fn is one of the gls_must_go, ems_spill,... functions
special_cost <- function(multiple, ipt, N, jackpot1, jackpot2, tickets, bets, fn) {
ret_layer <- make_layer_f(5e6, 0)
ins_layer <- make_layer_f(20e6, 5e6)
xs_layer <- make_layer_f(400e6, 25e6)
ret_cost <- fn(N, ret_layer, jackpot1, jackpot2, tickets, bets)
xs_cost <- fn(N, xs_layer, jackpot1, jackpot2, tickets, bets)
ins_cost <- fn(N, ins_layer, jackpot1, jackpot2, tickets, bets)*(1+ipt)*multiple
total_cost <- ret_cost + ins_cost + xs_cost
c(retention = ret_cost, insurance = ins_cost, xs_retention = xs_cost, total = total_cost)/bets
}
# Actual EJS 2nd Jan 2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 20449935.1, tickets = 47338185, bets = 580534, fn = ejs_spill)
# Actual EJS 9th Jan 2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 28164688.80, tickets = 50386168, bets = 650978, fn = ejs_spill)
# Actual EJS 25/5/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9309431.20, tickets = 35775782, bets = 517626, fn = ejs_spill)
# Actual EJS 1/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21956534.40, tickets = 39637773, bets = 529340, fn = ejs_spill)
# Actual EJS 8/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23365416.00, tickets = 41682699, bets = 573714, fn = ejs_spill)
# Actual EJS 15/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23887833.2, tickets = 42268189, bets = 594704, fn = ejs_spill)
# Actual EJS 22/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23907478.1, tickets = 42118940, bets = 620198, fn = ejs_spill)
#Actual EJS 29/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23865074.8, tickets = 42145418, bets = 597370, fn = ejs_spill)
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
source('~/GitHub/R/special_draws/special_cost.R')
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)*616379
# Actual EJS 2nd Jan 2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 20449935.1, tickets = 47338185, bets = 580534, fn = ejs_spill)
# Actual EJS 9th Jan 2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 28164688.80, tickets = 50386168, bets = 650978, fn = ejs_spill)
# Actual EJS 25/5/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9309431.20, tickets = 35775782, bets = 517626, fn = ejs_spill)
# Actual EJS 1/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21956534.40, tickets = 39637773, bets = 529340, fn = ejs_spill)
# Actual EJS 8/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23365416.00, tickets = 41682699, bets = 573714, fn = ejs_spill)
# Actual EJS 15/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23887833.2, tickets = 42268189, bets = 594704, fn = ejs_spill)
# Actual EJS 22/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23907478.1, tickets = 42118940, bets = 620198, fn = ejs_spill)
#Actual EJS 29/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23865074.8, tickets = 42145418, bets = 597370, fn = ejs_spill)
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
ej_pars_max <- list(
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9309431.20, tickets = 35775782, bets = 517626, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21956534.40, tickets = 39637773, bets = 529340, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23365416.00, tickets = 41682699, bets = 573714, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23887833.2, tickets = 42268189, bets = 594704, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23907478.1, tickets = 42118940, bets = 620198, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23865074.8, tickets = 42145418, bets = 597370, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
)
# do.call()
source("~/GitHub/R/special_draws/special_cost.R")
# Actual EJS 2nd Jan 2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 20449935.1, tickets = 47338185, bets = 580534, fn = ejs_spill)
# Actual EJS 9th Jan 2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 28164688.80, tickets = 50386168, bets = 650978, fn = ejs_spill)
# Actual EJS 25/5/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9309431.20, tickets = 35775782, bets = 517626, fn = ejs_spill)
# Actual EJS 1/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21956534.40, tickets = 39637773, bets = 529340, fn = ejs_spill)
# Actual EJS 8/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23365416.00, tickets = 41682699, bets = 573714, fn = ejs_spill)
# Actual EJS 15/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23887833.2, tickets = 42268189, bets = 594704, fn = ejs_spill)
# Actual EJS 22/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23907478.1, tickets = 42118940, bets = 620198, fn = ejs_spill)
#Actual EJS 29/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23865074.8, tickets = 42145418, bets = 597370, fn = ejs_spill)
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
ej_pars_max <- list(
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9309431.20, tickets = 35775782, bets = 517626, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21956534.40, tickets = 39637773, bets = 529340, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23365416.00, tickets = 41682699, bets = 573714, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23887833.2, tickets = 42268189, bets = 594704, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23907478.1, tickets = 42118940, bets = 620198, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23865074.8, tickets = 42145418, bets = 597370, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
)
# do.call()
lappply(ej_pars_max, do.call, what = "special_cost")
lappply(ej_pars_max, do.call, what = special_cost)
lapply(ej_pars_max, do.call, what = special_cost)
sapply(ej_pars_max, do.call, what = special_cost)
source("~/GitHub/R/special_draws/special_cost.R")
# Actual EJS 2nd Jan 2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 20449935.1, tickets = 47338185, bets = 580534, fn = ejs_spill)
# Actual EJS 9th Jan 2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 28164688.80, tickets = 50386168, bets = 650978, fn = ejs_spill)
# Actual EJS 25/5/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9309431.20, tickets = 35775782, bets = 517626, fn = ejs_spill)
# Actual EJS 1/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21956534.40, tickets = 39637773, bets = 529340, fn = ejs_spill)
# Actual EJS 8/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23365416.00, tickets = 41682699, bets = 573714, fn = ejs_spill)
# Actual EJS 15/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23887833.2, tickets = 42268189, bets = 594704, fn = ejs_spill)
# Actual EJS 22/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23907478.1, tickets = 42118940, bets = 620198, fn = ejs_spill)
#Actual EJS 29/6/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23865074.8, tickets = 42145418, bets = 597370, fn = ejs_spill)
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
ej_pars_max <- list(
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 20449935.1, tickets = 47338185, bets = 580534, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 28164688.80, tickets = 50386168, bets = 650978, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9309431.20, tickets = 35775782, bets = 517626, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21956534.40, tickets = 39637773, bets = 529340, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23365416.00, tickets = 41682699, bets = 573714, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23887833.2, tickets = 42268189, bets = 594704, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23907478.1, tickets = 42118940, bets = 620198, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23865074.8, tickets = 42145418, bets = 597370, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
)
# do.call()
sapply(ej_pars_max, do.call, what = special_cost)
ej_pars_sum <- lapply(ej_pars_max, function(x){
x$jackpot2 <- 0.2*x$jackpot2
x
})
ej_pars_sum
ej_pars_sum <- lapply(ej_pars_max, function(x){
x$jackpot2 <- 0.2*x$jackpot2
x$fn <- ejs_spill_sum
x
})
sapply(ej_pars_max, do.call, what = special_cost)
sapply(ej_pars_sum, do.call, what = special_cost)
max_res <- sapply(ej_pars_max, do.call, what = special_cost)
sum_res <- sapply(ej_pars_sum, do.call, what = special_cost)
max_res
sum_res
lapply(ej_pars_max, function(x){x$bets})
sapply(ej_pars_max, function(x){x$bets})
sum(sapply(ej_pars_max, function(x){x$bets}))
source("~/GitHub/R/tyche/zoe/ms_from_zoe.R")
source("~/GitHub/R/tyche/cost_per_bet.R")
source("~/GitHub/R/tyche/margin_automation.R")
source("~/GitHub/R/currencies/currencies.R")
require(xlsx)
x <- read_losses("~/GitHub/R/sims/output_110")
x <- x*1.1818
r_layer <- tyche_cost(x[,1], 1, 0, make_layer_f(30e6, 0), "retention")
c_layer <- tyche_cost(x[,1], 1.35, 0.12, make_layer_f(30e6, 30e6), "c_layer")
b_layer <- tyche_cost(x[,1], 1.35, 0.12, make_layer_f(30e6, 60e6), "b_layer")
a_layer <- tyche_cost(x[,1], 1.35, 0.12, make_layer_f(30e6, 90e6), "a_layer")
trad_layer <- trad_ins_cost(1.6, 0.12, make_layer_f(33e6, 109864597), "trad_layer")
tower <- list(r_layer, c_layer, b_layer, a_layer, trad_layer)
getwd()
download.file(url = 'https://www.ecb.europa.eu/stats/eurofxref/eurofxref-hist.zip', destfile = 'exchange_rate.zip')
unzip("exchange_rate.zip")
file.remove("exchange_rate.zip")
debug(marginal_cost)
undebug(marginal_cost)
debug(margins_scalar_block)
margins_scalar_block(jackpot = eur(seq(10,90)*1e6), lower_costs = eur(0.52), bet_price = eur(2), odds = 95344200, tower = tower)
debug(margins_block)
ils_cost
tail(ils_cost, n=1)
tail(ils_cost, n=1)$retention
tail(ils_cost, n=1)[2]
convert_to(as_currency(tail(ils_cost, n=1)[2], "USD"), "EUR", Sys.Date())
convert_to(as_currency(tail(ils_cost, n=1)[7], "USD"), "EUR", Sys.Date())
convert_to(as_currency(tail(ils_cost, n=1)[2], "USD"), "EUR", Sys.Date())
convert_to(as_currency(tail(ils_cost, n=1)[2:3], "USD"), "EUR", Sys.Date())
convert_to(as_currency(tail(ils_cost, n=1)[3:5], "USD"), "EUR", Sys.Date())
sum(convert_to(as_currency(tail(ils_cost, n=1)[3:5], "USD"), "EUR", Sys.Date()))
convert_to(as_currency(tail(ils_cost, n=1)[3:5], "USD"), "EUR", Sys.Date())
convert_to(as_currency(tail(ils_cost, n=1)[3:5], "USD"), "EUR", Sys.Date())@amount
sum(convert_to(as_currency(tail(ils_cost, n=1)[3:5], "USD"), "EUR", Sys.Date())@amount)
sum(convert_to(as_currency(tail(ils_cost, n=1)[2], "USD"), "EUR", Sys.Date())@amount)
sum(convert_to(as_currency(tail(ils_cost, n=1)[3:5], "USD"), "EUR", Sys.Date())@amount)
ils_cost
convert_to(money = ils_cost[,1], target_currency = "EUR", date = Sys.Date())
convert_to(money = ils_cost[1,1], target_currency = "EUR", date = Sys.Date())
convert_to(money = ils_cost[1,1], target_currency = "EUR", date = Sys.Date()-1)
sum(convert_to(as_currency(tail(ils_cost, n=1)[2], "USD"), "EUR", Sys.Date())@amount)
convert_to(money = ils_cost[1,1], target_currency = "EUR", date = Sys.Date()-1)
ils_cost
ils_cost[1,1]
convert_to(money = as_currency(ils_cost[,1], "USD"), target_currency = "EUR", date = Sys.Date()-1)
ils_cost
sum(convert_to(as_currency(ils_cost[9], "USD"), "EUR", Sys.Date())@amount)
sum(convert_to(as_currency(ils_cost[9,2], "USD"), "EUR", Sys.Date())@amount)
sum(convert_to(as_currency(ils_cost[9,3:5], "USD"), "EUR", Sys.Date())@amount)
sapply(ej_pars_max, function(x){x$bets})
ui <- fluidPage(navlistPanel(
tabPanel(title = "Config",
fluidRow(
column(width = 6,
wellPanel(
fileInput(inputId = "ms_file", label = "Select Monitoring Sheet"),
dateRangeInput(inputId = "dates", label = "Select date range", start = "2018-01-01", end = Sys.Date()),
numericInput(inputId = "Monte Carlo Size", label = "Select Monte Carlo size", value = 1e6)
)))),
tabPanel(title = "Layers",
layer_config_ui),
tabPanel(title = "Run",
actionButton(inputId = "run_btn", label = "Run"))
))
server <- function(input, output, session) {
layer_server(input, output, session)
}
shinyApp(ui, server)
source("~/GitHub/R/special_draws/special_cost.R")
ejs_spill(N = 50, ins_layer = make_layer_f(500e6, 0), jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202)
ejs_spill(N = 50, ins_layer = make_layer_f(500e6, 0), jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = bets)
ejs_spill(N = 50, ins_layer = make_layer_f(500e6, 0), jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379)
ejs_spill(N = 50, ins_layer = make_layer_f(5e6, 20e6), jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379)
ejs_spill(N = 50, ins_layer = make_layer_f(20e6, 5e6), jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379)
x <- scan("~/Work/Projects/EJS_Lotter/sims/results_10/ejs_90s.txt")
ejp_data <- read.csv("~/GitHub/R/data_extractors/eurojackpot/extracted_data.csv") %>%
mutate(date = as.Date(date, "%Y-%b-%d"), cycle = jackpot_cycle(to_roll_over_1), day = weekdays(date)) %>%
select(date, entries, rojp_1, cycle)
library(dplyr)
library(magrittr)
library(xlsx)
library(plotly)
jackpot_cycle <- function(to_roll_amount) {
n <- length(to_roll_amount)
out <- rep(NA, n)
k <- 1
out[1] <- k
if(n > 1) for(i in 2:n) {
if(to_roll_amount[i-1] == 0) k <- k + 1
out[i] <- k
}
out
}
glp_data <- read.csv("~/GitHub/R/data_extractors/german_lotto/extracted_data.csv") %>%
mutate(date = as.Date(date, "%Y-%b-%d"), cycle = jackpot_cycle(to_roll_over_1), day = weekdays(date)) %>%
select(date, entries, rojp_1, cycle)
ejp_data <- read.csv("~/GitHub/R/data_extractors/eurojackpot/extracted_data.csv") %>%
mutate(date = as.Date(date, "%Y-%b-%d"), cycle = jackpot_cycle(to_roll_over_1), day = weekdays(date)) %>%
select(date, entries, rojp_1, cycle)
ejp_data
ejs_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 3, header = T, startRow = 4) %>%
mutate(day = weekdays(date)) %>%
select(date, day, entries = bets, partner = partner.name)
ejs_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 3, header = T, startRow = 4) %>%
mutate(day = weekdays(date)) %>%
select(date, day, entries = bets, partner = partner.name)
ejs_data
ejs_data$rojp_1 <- rep(ejp_data$rojp_1[ejp_data$date %in% ejs_data$date], times = table(ejs_data$date))
ejs_data$cycle <- rep(ejp_data$cycle[ejp_data$date %in% ejs_data$date], times = table(ejs_data$date))
ggplot(ejs_data %>% filter(partner == "tipp24.com"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
plot_ly(ejs_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, color = ~day, text = ~date, hoverinfo = "text", colors = c(Wednesday = "black", Saturday = "red"))
plot_ly(ejs_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, text = ~date, hoverinfo = "text")
source("~/GitHub/R/special_draws/special_cost.R")
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9e6, tickets = 37e6, bets = 5e5, fn = ejs_spill)
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9e6, tickets = 37e6, bets = 5e5, fn = ejs_spill)/5e5
fc <- 0.435 + 0.0216*2
fc <- 0.435 + 0.0216*2 + 1.1616
#Actual EJS 6/7/2018
special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9e6, tickets = 37e6, bets = 5e5, fn = ejs_spill)/5e5 + fc
#Actual EJS 6/7/2018
tc <- special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9e6, tickets = 37e6, bets = 5e5, fn = ejs_spill)/5e5 + fc
tc
1 - tc/2
#Actual EJS 6/7/2018
tc <- special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 11.5e6, tickets = 37e6, bets = 5e5, fn = ejs_spill)/5e5 + fc
1 - tc/2
#Actual EJS 6/7/2018
tc <- special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 10e6, tickets = 40e6, bets = 7e5, fn = ejs_spill)/7e5 + fc
1 - tc/2
#Actual EJS 6/7/2018
tc <- special_cost(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9e6, tickets = 43e6, bets = 6e5, fn = ejs_spill)/6e5 + fc
1 - tc/2
source("~/GitHub/R/special_draws/special_cost.R")
ej_pars_max <- list(
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 20449935.1, tickets = 47338185, bets = 580534, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 28164688.80, tickets = 50386168, bets = 650978, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9309431.20, tickets = 35775782, bets = 517626, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21956534.40, tickets = 39637773, bets = 529340, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23365416.00, tickets = 41682699, bets = 573714, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23887833.2, tickets = 42268189, bets = 594704, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23907478.1, tickets = 42118940, bets = 620198, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23865074.8, tickets = 42145418, bets = 597370, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill)
)
do.call
sapply(eh_pars_max, do.call, what = special_cost)
sapply(ej_pars_max, do.call, what = special_cost)
ej_pars_max <- list(
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 20449935.1, tickets = 47338185, bets = 580534, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 28164688.80, tickets = 50386168, bets = 650978, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 9309431.20, tickets = 35775782, bets = 517626, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21956534.40, tickets = 39637773, bets = 529340, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23365416.00, tickets = 41682699, bets = 573714, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23887833.2, tickets = 42268189, bets = 594704, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23907478.1, tickets = 42118940, bets = 620198, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23865074.8, tickets = 42145418, bets = 597370, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23997950.4, tickets = 42501202, bets = 616379, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 6172842.765, tickets = 36366433, bets = 482239, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 21700626.77, tickets = 38837833, bets = 449571, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 22587229.47, tickets = 40212913, bets = 550213, fn = ejs_spill),
list(multiple = 1.7, ipt = 0.12, N = 50, jackpot1 = 0, jackpot2 = 23091369.52, tickets = 40955592, bets = 496632, fn = ejs_spill)
)
sapply(ej_pars_max, do.call, what = special_cost)
sapply(ej_pars_max, do.call, what = special_cost)
t(sapply(ej_pars_max, do.call, what = special_cost))
sapply(ej_pars_max, '[[', "bets")
cost <- t(sapply(ej_pars_max, do.call, what = special_cost))
bets <- sapply(ej_pars_max, '[[', "bets")
cost
costs/bets
cost/bets
cos
cost
bets
cost/bets
bets
jackpot <- sapply(ej_pars_max, '[[', "jackpot2")
tickets <- sapply(ej_pars_max, '[[', "tickets")
bets <- sapply(ej_pars_max, '[[', "bets")
cbind(jackpot, tickets, bers)
cbind(jackpot, tickets, bets)
