})
sales <- unname(sales)
official_tables <- lapply(uk_lotto_urls, official_extract_table)
official_tables <- do.call(rbind, official_tables)
result <- cbind(draw_number = draw_numbers, sales, official_tables)
result
}
is_draw_ready <- function(draw_number) {
url_string <- uk_lotto_url(draw_number)
draw_url <- url(url_string)
result <- grep("Page not found", readLines(draw_url))
close(draw_url)
length(result)==0
}
x <- read.csv("extracted_data.csv")
last_draw_number <- x[,1]
last_draw_number <- last_draw_number[length(last_draw_number)]
next_draw_number <- last_draw_number + 1
x
x <- read.csv("extracted_data.csv")
last_draw_number <- x[,1]
last_draw_number <- last_draw_number[length(last_draw_number)]
next_draw_number <- last_draw_number + 1
next_draw_number
next_draw_number
my_f <- function() {
while(is_draw_ready(next_draw_number)) {
x <- rbind(x, extract_draw_result(next_draw_number))
next_draw_number <- next_draw_number + 1
}
}
my_f
my_f()
x
my_f <- function() {
while(is_draw_ready(next_draw_number)) {
x <- rbind(x, extract_draw_result(next_draw_number))
next_draw_number <- next_draw_number + 1
}
x
}
x
my_f()
x
my_f()
withCallingHandlers({myf()})
withCallingHandlers({my_f()})
withCallingHandlers({my_f()}, warning = function(w){})
withCallingHandlers({my_f()}, warning = function(w){print(w)})
extract_free_tickets <- function(x) {
match2_k <- grep("2 match", x)
match2_line <- x[match2_k]
string <- sub("2 match.*?0(.*)&.*", "\\1", match2_line)
string <- gsub(",", "", string)
as.numeric(string)
}
mersey_extract_sales <- function(url_lines) {
sales_k <- grep("Ticket sales", url_lines)
sales_line <- url_lines[sales_k[1]]
string <- sub(".*;([0-9,]+).*", "\\1", sales_line)
string <- gsub(",", "", string)
as.numeric(string)
}
official_extract_table <- function(url_string) {
x <- htmltab::htmltab(url_string, 1)
winners <- x[1:6,2]
prize <- as.numeric(gsub("[£,]", "", x[1:5, 3]))
fund <- as.numeric(gsub("[£,]", "", x[1:5, 4]))
if(prize[1] == 0) prize[1] <- fund[1]
result <- c(winners, prize)
result <- as.numeric(gsub(",", "", result))
names(result) <- c(paste("winners", 1:6, sep = "_"), paste("prize", 1:5, sep = "_"))
result
}
mersey_url <- function(draw_number) {
paste("http://lottery.merseyworld.com/archive/Lott", draw_number, ".html", sep = "")
}
uk_lotto_url <- function(draw_number) {
paste("https://www.national-lottery.co.uk/results/lotto/draw-history/prize-breakdown/", draw_number, sep = "")
}
extract_draw_result <- function(draw_numbers) {
mersey_urls <- mersey_url(draw_numbers)
uk_lotto_urls <- uk_lotto_url(draw_numbers)
sales <- sapply(mersey_urls, function(m_url){
con_url <- url(m_url)
result <- mersey_extract_sales(readLines(con_url))
close(con_url)
result
})
sales <- unname(sales)
official_tables <- lapply(uk_lotto_urls, official_extract_table)
official_tables <- do.call(rbind, official_tables)
result <- cbind(draw_number = draw_numbers, sales, official_tables)
result
}
is_draw_ready <- function(draw_number) {
url_string <- uk_lotto_url(draw_number)
draw_url <- url(url_string)
result <- grep("Page not found", readLines(draw_url))
close(draw_url)
length(result)==0
}
x <- read.csv("extracted_data.csv")
last_draw_number <- x[,1]
last_draw_number <- last_draw_number[length(last_draw_number)]
next_draw_number <- last_draw_number + 1
extract_draw_result(next_draw_number)
extract_draw_result(next_draw_number+1)
extract_draw_result(next_draw_number+1)
debug(extract_draw_result)
extract_draw_result(next_draw_number+1)
debug(mersey_extract_sales)
grep("Ticket sales", url_lines)
url_lines[69]
url_lines[68]
url_lines[69]
url_lines[69]
Sys.setlocale('LC_ALL','C')
grep("Ticket sales", url_lines)
Sys.getlocale()
Sys.getlocale()
Sys.setlocale(locale = Sys.getlocale())
Sys.setlocale(locale = en_GB.UTF-*)
Sys.setlocale(locale = en_GB.UTF-8)
Sys.setlocale(locale = "en_GB.UTF-8")
Sys.setlocale('LC_ALL','C')
Sys.getlocale()
extract_free_tickets <- function(x) {
match2_k <- grep("2 match", x)
match2_line <- x[match2_k]
string <- sub("2 match.*?0(.*)&.*", "\\1", match2_line)
string <- gsub(",", "", string)
as.numeric(string)
}
mersey_extract_sales <- function(url_lines) {
Sys.setlocale('LC_ALL','C')
cur_locale <- Sys.getlocale()
sales_k <- grep("Ticket sales", url_lines)
sales_line <- url_lines[sales_k[1]]
string <- sub(".*;([0-9,]+).*", "\\1", sales_line)
string <- gsub(",", "", string)
as.numeric(string)
}
official_extract_table <- function(url_string) {
x <- htmltab::htmltab(url_string, 1)
winners <- x[1:6,2]
prize <- as.numeric(gsub("[£,]", "", x[1:5, 3]))
fund <- as.numeric(gsub("[£,]", "", x[1:5, 4]))
if(prize[1] == 0) prize[1] <- fund[1]
result <- c(winners, prize)
result <- as.numeric(gsub(",", "", result))
names(result) <- c(paste("winners", 1:6, sep = "_"), paste("prize", 1:5, sep = "_"))
result
}
mersey_url <- function(draw_number) {
paste("http://lottery.merseyworld.com/archive/Lott", draw_number, ".html", sep = "")
}
uk_lotto_url <- function(draw_number) {
paste("https://www.national-lottery.co.uk/results/lotto/draw-history/prize-breakdown/", draw_number, sep = "")
}
extract_draw_result <- function(draw_numbers) {
mersey_urls <- mersey_url(draw_numbers)
uk_lotto_urls <- uk_lotto_url(draw_numbers)
sales <- sapply(mersey_urls, function(m_url){
con_url <- url(m_url)
result <- mersey_extract_sales(readLines(con_url))
close(con_url)
result
})
sales <- unname(sales)
official_tables <- lapply(uk_lotto_urls, official_extract_table)
official_tables <- do.call(rbind, official_tables)
result <- cbind(draw_number = draw_numbers, sales, official_tables)
result
}
is_draw_ready <- function(draw_number) {
url_string <- uk_lotto_url(draw_number)
draw_url <- url(url_string)
result <- grep("Page not found", readLines(draw_url))
close(draw_url)
length(result)==0
}
x <- read.csv("extracted_data.csv")
x
last_draw_number <- x[,1]
last_draw_number <- last_draw_number[length(last_draw_number)]
next_draw_number <- last_draw_number + 1
while(is_draw_ready(next_draw_number)) {
x <- rbind(x, extract_draw_result(next_draw_number))
next_draw_number <- next_draw_number + 1
}
write.csv(x = x, file = "extracted_data.csv", row.names = F)
source("crawler.R")
update_data_file()
url_string <- "https://www.lotto-hessen.de/static/gamebroker_5/default/download_files/lotto2018.zip"
my_url <- url(url_string)
readLines(my_url)
my_url
url_string <- "https://www.lotto-hessen.de/static/gamebroker_5/default/download_files/lotto2018.zip"
system(command = paste("curl ", url_string, " -o glp_data.zip"))
source("crawler.R")
update_data_file()
source("crawler.R")
update_data_file()
x <- readLines(url("view-source:https://www.national-lottery.co.uk/results/lotto/draw-history/prize-breakdown/2344"))
x <- readLines(url("https://www.national-lottery.co.uk/results/lotto/draw-history/prize-breakdown/2344"))
grep("section_header", x)
x[338]
x[388]
y <- paste(x, collapse= " ")
y
sub(".*section_header\",><h1>(.*)</h1>.*", "\\1", y)
sub(".*section_header\"><h1>(.*)</h1>.*", "\\1", y)
sub(".*section_header\"><h1>(.*)<\/h1>.*", "\\1", y)
sub(".*section_header\"><h1>(.*)<\\/h1>.*", "\\1", y)
sub(".*section_header\"><h1>(.*)</h1>.*", "\\1", y)
sub(".*section_header\"><h1>(.*)</h1.*", "\\1", y)
sub(".*section_header\"><h1>(.+)</h1.*", "\\1", y)
sub(".*section_header"><h1>(.+)</h1.*", "\\1", y)
sub(".*section_header\"><h1>(.+)</h1.*", "\\1", y)
sub(".*section_header\">.*<h1>(.+)</h1.*", "\\1", y)
grep("[Mon|Tue|Wed|Thu|Fri|Sat|Sun]", x)
k <- grep("[Mon|Tue|Wed|Thu|Fri|Sat|Sun]", x)
x[k]
x[k[1]]
k <- grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)", x)
k
x[k[1]]
x[k[2]]
k <- grep("Mon|Tue|Wed|Thu|Fri|Sat|Sun", x)
k
x[k[2]]
k <- grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)", x)
k
x[k[6]]
x[k[1]]
k <- grep("^(Mon|Tue|Wed|Thu|Fri|Sat|Sun)", x)
k
k <- grep("(^Mon|^Tue|^Wed|^Thu|^Fri|^Sat|^Sun)", x)
k
k <- grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)", x)
k
x[k]
k <- grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)", x)
k
k <- grep("(Mon|Tue|Wed|Thu\b|Fri|Sat|Sun)", x)
k
x[k]
k <- grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\b", x)
k
k <- grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\b.*", x)
k
k <- grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\b", x)
grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\b", x)
grep("(Mon\b|Tue\b|Wed\b|Thu\b|Fri\b|Sat\b|Sun\b)", x)
grep("(Mon|Tue|Wed|Thu\b|Fri|Sat|Sun)", x)
x[grep("(Mon|Tue|Wed|Thu\b|Fri|Sat|Sun)", x)]
x[grep("(Mon|Tue|Wed\b|Thu\b|Fri|Sat|Sun)", x)]
x[grep("(Mon|Tue|Wed\b|Thu\b|Fri\b|Sat|Sun)", x)]
x[grep("(Mon|Tue|Wed\b|Thu\b|Fri\b|Sat\b|Sun)", x)]
x[grep("(Mon|Tue|Wed\b|Thu\b|Fri\b.*|Sat|Sun)", x)]
grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\b", x)
grep("(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\b.*", x)
grep("[Mon|Tue|Wed|Thu|Fri|Sat|Sun]\b.*", x)
sub(".*section_header\">.*<h1>(.+)</h1.*", "\\1", y)
sub(".*section_header\">.*<h1>(.+)</h1.*", "\\1", y)
rev(sub(".*section_header\">.*<h1>(.+)</h1.*", "\\1", y))
sub(".*section_header\">.*<h1>(.+)</h1.*", "\\1", y)
sub(".*section_header\">.*<h1>([A-Za-z].+)</h1.*", "\\1", y)
sub(".*section_header\">.*<h1>[A-Za-z]*(.+)</h1.*", "\\1", y)
sub(".*section_header\">.*<h1>[A-Za-z]*\\s.*(.+)</h1.*", "\\1", y)
sub(".*section_header\">.*<h1>[A-Za-z]*\\s.*?(.+)</h1.*", "\\1", y)
d <- sub(".*section_header\">.*<h1>[A-Za-z]*\\s.*?(.+)</h1.*", "\\1", y)
gsub(" ", "-", d)
as.Date(gsub(" ", "-", d), "%d-%b-%Y")
d
as.Date(d, "%d %b %Y")
sub(".*section_header\">.*<h1>[A-Za-z]*\\s.*?(.+)</h1.*", "\\1", y)
sub(".*section_header\">.*<h1>[A-Za-z]*\\s.*?(.+)</h1.*", "\\1", y)
extract_free_tickets <- function(x) {
match2_k <- grep("2 match", x)
match2_line <- x[match2_k]
string <- sub("2 match.*?0(.*)&.*", "\\1", match2_line)
string <- gsub(",", "", string)
as.numeric(string)
}
extract_date <- function(url_lines) {
x <- paste(url_lines, collapse = " ")
extracted <- sub(".*section_header\">.*<h1>[A-Za-z]*\\s.*?(.+)</h1.*", "\\1", y)
extracted <- as.Date(extracted, "%d %b %Y")
format(extracted, "%Y-%b-d")
}
mersey_extract_sales <- function(url_lines) {
Sys.setlocale('LC_ALL','C')
cur_locale <- Sys.getlocale()
sales_k <- grep("Ticket sales", url_lines)
sales_line <- url_lines[sales_k[1]]
string <- sub(".*;([0-9,]+).*", "\\1", sales_line)
string <- gsub(",", "", string)
as.numeric(string)
}
official_extract_table <- function(url_string) {
x <- htmltab::htmltab(url_string, 1)
winners <- x[1:6,2]
prize <- as.numeric(gsub("[??,]", "", x[1:5, 3]))
fund <- as.numeric(gsub("[??,]", "", x[1:5, 4]))
if(prize[1] == 0) prize[1] <- fund[1]
result <- c(winners, prize)
result <- as.numeric(gsub(",", "", result))
names(result) <- c(paste("winners", 1:6, sep = "_"), paste("prize", 1:5, sep = "_"))
result
}
mersey_url <- function(draw_number) {
paste("http://lottery.merseyworld.com/archive/Lott", draw_number, ".html", sep = "")
}
uk_lotto_url <- function(draw_number) {
paste("https://www.national-lottery.co.uk/results/lotto/draw-history/prize-breakdown/", draw_number, sep = "")
}
extract_draw_result <- function(draw_numbers) {
mersey_urls <- mersey_url(draw_numbers)
uk_lotto_urls <- uk_lotto_url(draw_numbers)
sales <- sapply(mersey_urls, function(m_url){
con_url <- url(m_url)
result <- mersey_extract_sales(readLines(con_url))
close(con_url)
result
})
sales <- unname(sales)
dates <- sapply(uk_lotto_urls, function(p_url){
con_url <- url(p_url)
result <- extract_date(readLines(con_url))
close(con_url)
result
})
official_tables <- lapply(uk_lotto_urls, official_extract_table)
official_tables <- do.call(rbind, official_tables)
result <- cbind(date = dates, draw_number = draw_numbers, sales, official_tables)
result
}
is_draw_ready <- function(draw_number) {
url_string <- uk_lotto_url(draw_number)
draw_url <- url(url_string)
result <- grep("Page not found", readLines(draw_url))
close(draw_url)
length(result)==0
}
update_data_file <- function() {
x <- read.csv("extracted_data.csv")
last_draw_number <- x[,2]
last_draw_number <- last_draw_number[length(last_draw_number)]
next_draw_number <- last_draw_number + 1
while(is_draw_ready(next_draw_number)) {
x <- rbind(x, extract_draw_result(next_draw_number))
next_draw_number <- next_draw_number + 1
}
write.csv(x = x, file = "extracted_data.csv", row.names = F)
}
source("crawler.R")
update_data_file()
debug(update_data_file)
source("crawler.R")
update_data_file()
debug(update_data_file)
update_data_file()
x
next_draw_number
extract_draw_result(next_draw_number)
debug(extract_draw_result)
extract_draw_result(next_draw_number)
sales
dates
extract_date <- function(url_lines) {
x <- paste(url_lines, collapse = " ")
extracted <- sub(".*section_header\">.*<h1>[A-Za-z]*\\s.*?(.+)</h1.*", "\\1", y)
extracted <- as.Date(extracted, "%d %b %Y")
format(extracted, "%Y-%b-%d")
}
update_data_file()
dates
debug(official_extract_table)
prize
update_data_file()
x
winners
gsub("[??,]", "", x[1:5, 3])
official_extract_table <- function(url_string) {
x <- htmltab::htmltab(url_string, 1)
winners <- x[1:6,2]
prize <- as.numeric(gsub("[£,]", "", x[1:5, 3]))
fund <- as.numeric(gsub("[£,]", "", x[1:5, 4]))
if(prize[1] == 0) prize[1] <- fund[1]
result <- c(winners, prize)
result <- as.numeric(gsub(",", "", result))
names(result) <- c(paste("winners", 1:6, sep = "_"), paste("prize", 1:5, sep = "_"))
result
}
Sys.getlocale()
official_extract_table <- function(url_string) {
x <- htmltab::htmltab(url_string, 1)
winners <- x[1:6,2]
prize <- as.numeric(gsub("[??,]", "", x[1:5, 3]))
fund <- as.numeric(gsub("[??,]", "", x[1:5, 4]))
if(prize[1] == 0) prize[1] <- fund[1]
result <- c(winners, prize)
result <- as.numeric(gsub(",", "", result))
names(result) <- c(paste("winners", 1:6, sep = "_"), paste("prize", 1:5, sep = "_"))
result
}
official_extract_table <- function(url_string) {
x <- htmltab::htmltab(url_string, 1)
winners <- x[1:6,2]
prize <- as.numeric(gsub("[£,]", "", x[1:5, 3]))
fund <- as.numeric(gsub("[£,]", "", x[1:5, 4]))
if(prize[1] == 0) prize[1] <- fund[1]
result <- c(winners, prize)
result <- as.numeric(gsub(",", "", result))
names(result) <- c(paste("winners", 1:6, sep = "_"), paste("prize", 1:5, sep = "_"))
result
}
lol
extract_free_tickets <- function(x) {
match2_k <- grep("2 match", x)
match2_line <- x[match2_k]
string <- sub("2 match.*?0(.*)&.*", "\\1", match2_line)
string <- gsub(",", "", string)
as.numeric(string)
}
extract_date <- function(url_lines) {
x <- paste(url_lines, collapse = " ")
extracted <- sub(".*section_header\">.*<h1>[A-Za-z]*\\s.*?(.+)</h1.*", "\\1", y)
extracted <- as.Date(extracted, "%d %b %Y")
format(extracted, "%Y-%b-%d")
}
mersey_extract_sales <- function(url_lines) {
Sys.setlocale('LC_ALL','C')
cur_locale <- Sys.getlocale()
sales_k <- grep("Ticket sales", url_lines)
sales_line <- url_lines[sales_k[1]]
string <- sub(".*;([0-9,]+).*", "\\1", sales_line)
string <- gsub(",", "", string)
as.numeric(string)
}
official_extract_table <- function(url_string) {
x <- htmltab::htmltab(url_string, 1)
winners <- x[1:6,2]
prize <- as.numeric(gsub("[£,]", "", x[1:5, 3]))
fund <- as.numeric(gsub("[£,]", "", x[1:5, 4]))
if(prize[1] == 0) prize[1] <- fund[1]
result <- c(winners, prize)
result <- as.numeric(gsub(",", "", result))
names(result) <- c(paste("winners", 1:6, sep = "_"), paste("prize", 1:5, sep = "_"))
result
}
mersey_url <- function(draw_number) {
paste("http://lottery.merseyworld.com/archive/Lott", draw_number, ".html", sep = "")
}
uk_lotto_url <- function(draw_number) {
paste("https://www.national-lottery.co.uk/results/lotto/draw-history/prize-breakdown/", draw_number, sep = "")
}
extract_draw_result <- function(draw_numbers) {
mersey_urls <- mersey_url(draw_numbers)
uk_lotto_urls <- uk_lotto_url(draw_numbers)
sales <- sapply(mersey_urls, function(m_url){
con_url <- url(m_url)
result <- mersey_extract_sales(readLines(con_url))
close(con_url)
result
})
sales <- unname(sales)
dates <- sapply(uk_lotto_urls, function(p_url){
con_url <- url(p_url)
result <- extract_date(readLines(con_url))
close(con_url)
result
})
official_tables <- lapply(uk_lotto_urls, official_extract_table)
official_tables <- do.call(rbind, official_tables)
result <- cbind(date = dates, draw_number = draw_numbers, sales, official_tables)
result
}
is_draw_ready <- function(draw_number) {
url_string <- uk_lotto_url(draw_number)
draw_url <- url(url_string)
result <- grep("Page not found", readLines(draw_url))
close(draw_url)
length(result)==0
}
update_data_file <- function() {
x <- read.csv("extracted_data.csv")
last_draw_number <- x[,2]
last_draw_number <- last_draw_number[length(last_draw_number)]
next_draw_number <- last_draw_number + 1
while(is_draw_ready(next_draw_number)) {
x <- rbind(x, extract_draw_result(next_draw_number))
next_draw_number <- next_draw_number + 1
}
write.csv(x = x, file = "extracted_data.csv", row.names = F)
}
source("crawler.R")
update_data_file()
extract_date <- function(url_lines) {
x <- paste(url_lines, collapse = " ")
extracted <- sub(".*section_header\">.*<h1>[A-Za-z]*\\s.*?(.+)</h1.*", "\\1", x)
extracted <- as.Date(extracted, "%d %b %Y")
format(extracted, "%Y-%b-%d")
}
source("crawler.R")
update_data_file()
source("crawler.R")
update_data_file()
source("crawler.R")
update_data_file()
