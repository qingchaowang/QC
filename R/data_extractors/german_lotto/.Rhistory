source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
z
my_data <- read.csv("~/GitHub/R/data_extractors/german_lotto/extracted_data.csv", header = T)
latest_draw <- make_draw_from_file_entry(my_data[nrow(my_data),])
latest_draw
serialize_draw(latest_draw)
latest_draw
x <- latest_draw
x
x
data.frame(x$date)
as.data.frame(x)
cbind(x$date, x$winners)
rbind(x$date, x$winners)
cbind(x$date, x$winners)
data.frame(x$date, x$winners)
data.frame(123, 1:10)
?data.frame
x$date
x$winners
out <- data.frame()
out
out$date <- x$date
out
out[,1] <- x$date
x$date
out[[1]] <- x$date
out[[,1]] <- x$date
out
out$date <- x$date
out
out$date <- 123
cbind(x$date)
cbind(x$date, t(x$winners))
data.frame(x$date, t(x$winners))
data.frame(x$date)
cbind(data.frame(x$date), t(x$winners))
class(cbind(data.frame(x$date), t(x$winners)))
cbind(data.frame(x$date), t(x$winners))
cbind(data.frame(), t(x$winners))
cbind(data.frame(x$date), t(x$winners))
cbind(data.frame(), x$date)
cbind(NULL, x$date)
data.frame(NULL, x$date)
x[-date]
x[-"date"]
cbind(data.frame(x$date), t(x$winners))
cbind(data.frame(t(x$date)), t(x$winners))
serialize_draw <- function(draw) {
flat_draw <- data.frame(draw$date)
for(el in draw) {
if(length(draw) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
# flat_draw <- do.call(c, lapply(draw, as.character))
#
# names(flat_draw) <- do.call(c, mapply(function(x,y){
#   if(y == 1) x
#   else paste(x, 1:y, sep = "_")
# }, as.list(names(draw)), lapply(draw, length)))
flat_draw
}
serialize_draw(latest_draw)
serialize_draw(latest_draw)$1
x
?getElement
serialize_draw(latest_draw)
z <- serialize_draw(latest_draw)
z
z <- z[-1]
z
serialize_draw <- function(draw) {
flat_draw <- data.frame(draw$date)
for(el in draw) {
if(length(draw) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw
}
z <- serialize_draw(latest_draw)
z
serialize_draw(latest_draw)
latest_draw
serialize_draw <- function(draw) {
flat_draw <- data.frame(draw$date)
for(el in draw) {
if(length(draw) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw[-1]
}
serialize_draw(latest_draw)
latest_draw
serialize_draw <- function(draw) {
flat_draw <- data.frame(draw$date)
for(el in draw) {
if(length(draw) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw
# flat_draw[-1]
}
serialize_draw(latest_draw)
serialize_draw <- function(draw) {
flat_draw <- data.frame(remove = NA)
for(el in draw) {
if(length(draw) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw
# flat_draw[-1]
}
serialize_draw(latest_draw)
serialize_draw <- function(draw) {
flat_draw <- data.frame(remove = NA)
for(el in draw) {
if(length(draw) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw[-1]
}
serialize_draw(latest_draw)
serialize_draw <- function(draw) {
flat_draw <- data.frame(remove = NA)
for(el in draw) {
if(length(draw) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw
}
serialize_draw(latest_draw)
debugonce(serialize_draw)
serialize_draw(latest_draw)
flat_draw
flat_draw
serialize_draw <- function(draw) {
flat_draw <- data.frame(remove = NA)
for(el in draw) {
if(length(el) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw
}
serialize_draw(latest_draw)
serialize_draw <- function(draw) {
flat_draw <- data.frame(remove = NA)
for(el in draw) {
if(length(el) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw[-1]
}
serialize_draw(latest_draw)
serialize_draw <- function(draw) {
flat_draw <- data.frame(remove = NA)
for(el in draw) {
if(length(el) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw[,-1]
}
serialize_draw(latest_draw)
debugonce(serialize_draw)
serialize_draw(latest_draw)
flat_draw
debug(serialize_draw)
serialize_draw(latest_draw)
flat_draw
serialize_draw <- function(draw) {
flat_draw <- data.frame(remove = NA)
for(el in draw) {
if(length(el) == 1) flat_draw <- cbind(flat_draw, el)
else flat_draw <- cbind(flat_draw, t(el))
}
flat_draw <- flat_draw[-1]
names(flat_draw) <- do.call(c, mapply(function(x,y){
if(y == 1) x
else paste(x, 1:y, sep = "_")
}, as.list(names(draw)), lapply(draw, length)))
flat_draw
}
serialize_draw(latest_draw)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
z[[1]]
hist_data$append(z)
z[[1]]
z[[1]]$winners_1
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
warnings()
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
debug(data_crawler$process)
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
my_data <- read.csv("~/GitHub/R/data_extractors/eurojackpot/extracted_data.csv", header = T)
latest_draw <- deserialise_draw(my_data[nrow(my_data),])
latest_draw
my_data
my_data[nrow(my_data),]
z <- my_data[nrow(my_data),]
z$winners
names(z)
grep("winners", names(z))
grep("winners", names(z))
names(z)[grep("winners", names(z))]
source("crawler.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data()
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data("extracted_data.csv")
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data("extracted_data.csv")
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data("extracted_data.csv")
hist_data
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
z
hist_data$append(z)
library(dplyr)
library(magrittr)
jackpot_cycle <- function(to_roll_amount) {
n <- length(to_roll_amount)
out <- rep(NA, n)
k <- 1
out[1] <- k
if(n > 1) for(i in 2:n) {
if(to_roll_amount[i-1] == 0) k <- k + 1
out[i] <- k
}
out
}
glp_data <- read.csv("~/GitHub/R/data_extractors/german_lotto/extracted_data.csv") %>%
mutate(date = as.Date(date, "%Y-%b-%d"), cycle = jackpot_cycle(to_roll_over_1)) %>%
select(date, cycle = jackpot_cycle(to_roll_over1), entries, rojp_1)
library(dplyr)
library(magrittr)
jackpot_cycle <- function(to_roll_amount) {
n <- length(to_roll_amount)
out <- rep(NA, n)
k <- 1
out[1] <- k
if(n > 1) for(i in 2:n) {
if(to_roll_amount[i-1] == 0) k <- k + 1
out[i] <- k
}
out
}
glp_data <- read.csv("~/GitHub/R/data_extractors/german_lotto/extracted_data.csv") %>%
mutate(date = as.Date(date, "%Y-%b-%d"), cycle = jackpot_cycle(to_roll_over_1)) %>%
select(date, cycle = jackpot_cycle(to_roll_over_1), entries, rojp_1)
glp_data <- read.csv("~/GitHub/R/data_extractors/german_lotto/extracted_data.csv") %>%
mutate(date = as.Date(date, "%Y-%b-%d")) %>%
select(date, cycle = jackpot_cycle(to_roll_over_1), entries, rojp_1)
glp_data <- read.csv("~/GitHub/R/data_extractors/german_lotto/extracted_data.csv") %>%
mutate(date = as.Date(date, "%Y-%b-%d"))
glp_data
glp_data <- read.csv("~/GitHub/R/data_extractors/german_lotto/extracted_data.csv") %>%
mutate(date = as.Date(date, "%Y-%b-%d"), cycle = jackpot_cycle(to_roll_over_1)) %>%
select(date, entries, rojp_1, cycle)
glp_data
library(ggplot2)
ggplot(glp_data, aes(rojp_1, entries)) + geom_point()
ggplot(glp_data, aes(rojp_1, entries)) + geom_point(col = weekdays(date))
ggplot(glp_data, aes(rojp_1, entries, col = weekdays(date))) + geom_point(col = col)
ggplot(glp_data, aes(rojp_1, entries)) + geom_point(col = aes(col = weekdays(date)))
ggplot(glp_data, aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(glp_data, aes(rojp_1, entries, my_col = weekdays(date))) + geom_point(col = my_col)
ggplot(glp_data, aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(glp_data, aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + facet_wrap(~cycle)
library(xlsx)
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, skip = 3)
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, skip = 3)
head(gls_data)
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, skip = 3, header = T)
head(gls_data)
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, skip = 4, header = T)
head(gls_data)
?read.xlsx
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, header = T, startRow = 4)
head(gls_data)
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, header = T, startRow = 4) %>%
select(entries = bets)
gls_data
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, header = T, startRow = 4) %>%
select(date, entries = bets, partner = partner.name)
gls_daa
head(gls_data)
t24com_data <- gls_data %>% filter(partner == "tipp24.com")
t24com_data
tail(glp_data)
gls_data$rojp_1 <- glp_data$rojp_1[glp_data$date %in% gls_data$date]
glp_data$date %in% gls_data$date
length*glp_data$date %in% gls_data$date)
length(glp_data$date %in% gls_data$date)
sum(glp_data$date %in% gls_data$date)
a <- 1:10
a[c(T)]
a[c(T, F)]
glp_data$rojp_1[glp_data$date %in% gls_data$date]
length(glp_data$rojp_1[glp_data$date %in% gls_data$date])
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, header = T, startRow = 4) %>%
select(date, entries = bets, partner = partner.name)
gls_data$rojp_1 <- glp_data$rojp_1[glp_data$date %in% gls_data$date]
dim(gls_data)
glp_data$rojp_1[gls_data$date %in% glp_data$date]
gls_data$date %in% glp_data$date
glp_data$date %in% gls_data$date
table(gls_data$date)
sum(table(gls_data$date))
gls_data$rojp_1 <- rep(glp_data$rojp_1[glp_data$date %in% gls_data$date], each = table(gls_data$date))
?rep
gls_data$rojp_1 <- rep(glp_data$rojp_1[glp_data$date %in% gls_data$date], times = table(gls_data$date))
gls_data$rojp_1
t24com_data <- gls_data %>% filter(partner == "tipp24.com")
gls_data$cycle <- rep(glp_data$cycle[glp_data$date %in% gls_data$date], times = table(gls_data$date))
t24com_data <- gls_data %>% filter(partner == "tipp24.com")
ggplot(t24com_data, aes(enties, rojp_1))
ggplot(t24com_data, aes(entries, rojp_1)) + geom_point(aes(col = weekdays(date)))
ggplot(t24com_data, aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
library(plotly)
ggplot(gls_data %>% filter(partner == "tipp24.com"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(gls_data %>% filter(partner == "ml24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
unique(gls_data$partner)
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + coord_cartesian(ylim=c(0, 70))
ggplot(gls_data %>% filter(partner == "ML24.ie", weekdays(date) == "Wednesday"), aes(rojp_1, entries))
library(dplyr)
library(magrittr)
library(xlsx)
library(plotly)
jackpot_cycle <- function(to_roll_amount) {
n <- length(to_roll_amount)
out <- rep(NA, n)
k <- 1
out[1] <- k
if(n > 1) for(i in 2:n) {
if(to_roll_amount[i-1] == 0) k <- k + 1
out[i] <- k
}
out
}
glp_data <- read.csv("~/GitHub/R/data_extractors/german_lotto/extracted_data.csv") %>%
mutate(date = as.Date(date, "%Y-%b-%d"), cycle = jackpot_cycle(to_roll_over_1), day = weekdays(date)) %>%
select(date, entries, rojp_1, cycle)
library(ggplot2)
ggplot(glp_data, aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + facet_wrap(~cycle)
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, header = T, startRow = 4) %>%
mutate(day = weekdays(date)) %>%
select(date, entries = bets, partner = partner.name)
gls_data$rojp_1 <- rep(glp_data$rojp_1[glp_data$date %in% gls_data$date], times = table(gls_data$date))
gls_data$cycle <- rep(glp_data$cycle[glp_data$date %in% gls_data$date], times = table(gls_data$date))
ggplot(gls_data %>% filter(partner == "tipp24.com"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + facet_wrap(~day)
gls_data %>% filter(partner == "ML24.ie")
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, header = T, startRow = 4) %>%
mutate(day = weekdays(date)) %>%
select(date, entries = bets, partner = partner.name)
head(gls_data)
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, header = T, startRow = 4)
mutate(gls_data, day == weekdays(date))
mutate(gls_data, day = weekdays(date))
gls_data <- read.xlsx(file = "/Volumes/dfs/Hedging Management/002_Operational/020_Tyche_Monitoring/005_Monitoring/001_Weekly_Monitoring/Monitoring_Sheet_ML24_14092018.xlsx", sheetIndex = 1, header = T, startRow = 4) %>%
mutate(day = weekdays(date)) %>%
select(date, day, entries = bets, partner = partner.name)
gls_data$rojp_1 <- rep(glp_data$rojp_1[glp_data$date %in% gls_data$date], times = table(gls_data$date))
gls_data$cycle <- rep(glp_data$cycle[glp_data$date %in% gls_data$date], times = table(gls_data$date))
ggplot(gls_data %>% filter(partner == "tipp24.com"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + facet_wrap(~day)
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + facet_wrap(~day) + coord_cartesian(ylim = c(0, 75))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + facet_wrap(~cycle) + coord_cartesian(ylim = c(0, 75)) +
1
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + facet_wrap(~cycle) + coord_cartesian(ylim = c(0, 75))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point() + facet_wrap(~cycle) + coord_cartesian(ylim = c(0, 75))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + coord_cartesian(ylim = c(0,75))
ggplot(gls_data %>% filter(partner == "ML24.ie"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + coord_cartesian(ylim = c(0,75)) + facet_wrap(~day)
unique(gls_data$partner)
ggplot(gls_data %>% filter(partner == "ML24.uk"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date))) + coord_cartesian(ylim = c(0,75)) + facet_wrap(~day)
ggplot(gls_data %>% filter(partner == "tipp24.com"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries)
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, col = ~day)
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, group_by(~day))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, group_by(day))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries)
gls_data %>% filter(partner == "tipp24.com", rojp_1 == 0, entries > 1.4e5)
gls_data %>% filter(partner == "tipp24.com", rojp_1 == 0, entries > 1.4e6)
gls_data %>% filter(partner == "tipp24.com", rojp_1 > 5.63e6, entries > 1.47e6)
gls_data %>% filter(partner == "tipp24.com", rojp_1 == 0, entries > 0.6e6, day == "Wednesday")
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, text = ~day, hoverinfo = "text")
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, text = ~date, hoverinfo = "text")
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, text = ~date, hoverinfo = "text", marker = list(col = ~day))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, text = ~date, hoverinfo = "text", marker = list(color = ~day))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, text = ~date, hoverinfo = "text", marker = list(colour = ~day))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, text = ~date, hoverinfo = "text", marker = list(color = ~day))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, color = ~day, text = ~date, hoverinfo = "text")
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, color = ~day, text = ~date, hoverinfo = "text", colors = c("black", "yellow"))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, color = ~day, text = ~date, hoverinfo = "text", colors = c(Wednesday = "black", Saturday = "yellow"))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, color = ~day, text = ~date, hoverinfo = "text", colors = c(Wednesday = "black", Saturday = "red"))
ggplot(gls_data %>% filter(partner == "tipp24.com"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, color = ~day, text = ~date, hoverinfo = "text", colors = c(Wednesday = "black", Saturday = "red"))
ggplot(gls_data %>% filter(partner == "tipp24.com"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, color = ~day, text = ~date, hoverinfo = "text", colors = c(Wednesday = "black", Saturday = "red"))
ggplot(gls_data %>% filter(partner == "tipp24.com"), aes(rojp_1, entries)) + geom_point(aes(col = weekdays(date)))
plot_ly(gls_data %>% filter(partner == "tipp24.com"), x = ~rojp_1, y = ~entries, color = ~day, text = ~date, hoverinfo = "text", colors = c(Wednesday = "black", Saturday = "red"))
source("crawler.R")
source("~/GitHub/R/german_lotto/german_lotto.R")
data_crawler <- crawler()
hist_data <- historical_data("extracted_data.csv")
z <- data_crawler$process(hist_data$most_recent_date, hist_data$call)
hist_data$append(z)
