this_loss <- pmin(size, pmax(amount - retention))
size <<- size - this_loss
for(d in delegates) d$claimed(this_loss)
if(!is.null(reinstatement)) {
reinstated_amount <- reinstatement$claim(this_loss, 0)
size <<- size + reinstated_amount
}
return (this_loss)
}
))
loss_aggregator <- setRefClass("loss_aggregator",
fields = list(
total = "numeric"
),
methods = list(
claimed = function(amount) {
total <<- total + amount
}
),
contains = "layer_delegate")
tower <- setRefClass("tower",
fields = list(
layers = "list"
),
methods = list(
claim = function(amount) {
retention <- 0
for(i in 1:length(layers)) {
tmp_size <- layers[[i]]$size()
layers[[i]]$claim(amount, retention)
retention <- retention + tmp_size
}
}
))
ag_loss <- loss_aggregator$new(total = 0)
retention1 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention2 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention3 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
jnr1 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr2 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr3 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
srb <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
sra <- layer$new(size = 25e6, reinstatement = NULL, delegates = list(ag_loss))
tower1 <- tower$new(layers = list(retention1, jnr1, srb, sra))
tower2 <- tower$new(layers = list(retention2, jnr2, srb, sra))
tower3 <- tower$new(layers = list(retention3, jnr3, srb, sra))
x <- read.matrix.num("~/Desktop/Blerina_presentation/data/ag_losses14.txt")
x <- matrix.ag(x, list(1:6, 7:9, 10:12))
tower1$claim(x[,1])
layer_delegate <- setRefClass("layer_delegate",
methods = list(
claimed = function(amount){}
))
layer <- setRefClass("layer",
fields = list(
size = "numeric",
reinstatement = "ANY",
delegates = "list"
),
methods = list(
claim = function(amount, retention) {
this_loss <- pmin(size, pmax(amount - retention))
size <<- size - this_loss
for(d in delegates) d$claimed(this_loss)
if(!is.null(reinstatement)) {
reinstated_amount <- reinstatement$claim(this_loss, 0)
size <<- size + reinstated_amount
}
return (this_loss)
}
))
loss_aggregator <- setRefClass("loss_aggregator",
fields = list(
total = "numeric"
),
methods = list(
claimed = function(amount) {
total <<- total + amount
}
),
contains = "layer_delegate")
tower <- setRefClass("tower",
fields = list(
layers = "list"
),
methods = list(
claim = function(amount) {
# retention <- 0
#
# for(i in 1:length(layers)) {
#
#   tmp_size <- layers[[i]]$size()
#   layers[[i]]$claim(amount, retention)
#   retention <- retention + tmp_size
# }
}
))
ag_loss <- loss_aggregator$new(total = 0)
retention1 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention2 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention3 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
jnr1 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr2 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr3 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
srb <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
sra <- layer$new(size = 25e6, reinstatement = NULL, delegates = list(ag_loss))
tower1 <- tower$new(layers = list(retention1, jnr1, srb, sra))
tower2 <- tower$new(layers = list(retention2, jnr2, srb, sra))
tower3 <- tower$new(layers = list(retention3, jnr3, srb, sra))
x <- read.matrix.num("~/Desktop/Blerina_presentation/data/ag_losses14.txt")
x <- matrix.ag(x, list(1:6, 7:9, 10:12))
tower1$claim(x[,1])
layer_delegate <- setRefClass("layer_delegate",
methods = list(
claimed = function(amount){}
))
layer <- setRefClass("layer",
fields = list(
size = "numeric",
reinstatement = "ANY",
delegates = "list"
),
methods = list(
claim = function(amount, retention) {
this_loss <- pmin(size, pmax(amount - retention))
size <<- size - this_loss
for(d in delegates) d$claimed(this_loss)
if(!is.null(reinstatement)) {
reinstated_amount <- reinstatement$claim(this_loss, 0)
size <<- size + reinstated_amount
}
return (this_loss)
}
))
loss_aggregator <- setRefClass("loss_aggregator",
fields = list(
total = "numeric"
),
methods = list(
claimed = function(amount) {
total <<- total + amount
}
),
contains = "layer_delegate")
tower <- setRefClass("tower",
fields = list(
layers = "list"
),
methods = list(
claim = function(amount) {
retention <- 0
for(i in 1:length(layers)) {
#
#   tmp_size <- layers[[i]]$size()
#   layers[[i]]$claim(amount, retention)
# retention <- retention + tmp_size
}
}
))
ag_loss <- loss_aggregator$new(total = 0)
retention1 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention2 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention3 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
jnr1 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr2 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr3 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
srb <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
sra <- layer$new(size = 25e6, reinstatement = NULL, delegates = list(ag_loss))
tower1 <- tower$new(layers = list(retention1, jnr1, srb, sra))
tower2 <- tower$new(layers = list(retention2, jnr2, srb, sra))
tower3 <- tower$new(layers = list(retention3, jnr3, srb, sra))
# x <- read.matrix.num("~/Desktop/Blerina_presentation/data/ag_losses14.txt")
# x <- matrix.ag(x, list(1:6, 7:9, 10:12))
tower1$claim(x[,1])
layer_delegate <- setRefClass("layer_delegate",
methods = list(
claimed = function(amount){}
))
layer <- setRefClass("layer",
fields = list(
size = "numeric",
reinstatement = "ANY",
delegates = "list"
),
methods = list(
claim = function(amount, retention) {
this_loss <- pmin(size, pmax(amount - retention))
size <<- size - this_loss
for(d in delegates) d$claimed(this_loss)
if(!is.null(reinstatement)) {
reinstated_amount <- reinstatement$claim(this_loss, 0)
size <<- size + reinstated_amount
}
return (this_loss)
}
))
loss_aggregator <- setRefClass("loss_aggregator",
fields = list(
total = "numeric"
),
methods = list(
claimed = function(amount) {
total <<- total + amount
}
),
contains = "layer_delegate")
tower <- setRefClass("tower",
fields = list(
layers = "list"
),
methods = list(
claim = function(amount) {
retention <- 0
for(i in 1:length(layers)) {
tmp_size <- layers[[i]]$size()
#   layers[[i]]$claim(amount, retention)
# retention <- retention + tmp_size
}
}
))
ag_loss <- loss_aggregator$new(total = 0)
retention1 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention2 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention3 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
jnr1 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr2 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr3 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
srb <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
sra <- layer$new(size = 25e6, reinstatement = NULL, delegates = list(ag_loss))
tower1 <- tower$new(layers = list(retention1, jnr1, srb, sra))
tower2 <- tower$new(layers = list(retention2, jnr2, srb, sra))
tower3 <- tower$new(layers = list(retention3, jnr3, srb, sra))
# x <- read.matrix.num("~/Desktop/Blerina_presentation/data/ag_losses14.txt")
# x <- matrix.ag(x, list(1:6, 7:9, 10:12))
tower1$claim(x[,1])
layer_delegate <- setRefClass("layer_delegate",
methods = list(
claimed = function(amount){}
))
layer <- setRefClass("layer",
fields = list(
size = "numeric",
reinstatement = "ANY",
delegates = "list"
),
methods = list(
claim = function(amount, retention) {
this_loss <- pmin(size, pmax(amount - retention))
size <<- size - this_loss
for(d in delegates) d$claimed(this_loss)
if(!is.null(reinstatement)) {
reinstated_amount <- reinstatement$claim(this_loss, 0)
size <<- size + reinstated_amount
}
return (this_loss)
}
))
loss_aggregator <- setRefClass("loss_aggregator",
fields = list(
total = "numeric"
),
methods = list(
claimed = function(amount) {
total <<- total + amount
}
),
contains = "layer_delegate")
tower <- setRefClass("tower",
fields = list(
layers = "list"
),
methods = list(
claim = function(amount) {
retention <- 0
for(i in 1:length(layers)) {
tmp_size <- layers[[i]]$size
layers[[i]]$claim(amount, retention)
retention <- retention + tmp_size
}
}
))
ag_loss <- loss_aggregator$new(total = 0)
retention1 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention2 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention3 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
jnr1 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr2 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr3 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
srb <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
sra <- layer$new(size = 25e6, reinstatement = NULL, delegates = list(ag_loss))
tower1 <- tower$new(layers = list(retention1, jnr1, srb, sra))
tower2 <- tower$new(layers = list(retention2, jnr2, srb, sra))
tower3 <- tower$new(layers = list(retention3, jnr3, srb, sra))
# x <- read.matrix.num("~/Desktop/Blerina_presentation/data/ag_losses14.txt")
# x <- matrix.ag(x, list(1:6, 7:9, 10:12))
tower1$claim(x[,1])
mean(ag_loss$total)
ag_loss <- loss_aggregator$new(total = 0)
retention1 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention2 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention3 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
jnr1 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr2 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr3 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
srb <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
sra <- layer$new(size = 25e6, reinstatement = NULL, delegates = list(ag_loss))
tower1 <- tower$new(layers = list(retention1, jnr1, srb, sra))
tower2 <- tower$new(layers = list(retention2, jnr2, srb, sra))
tower3 <- tower$new(layers = list(retention3, jnr3, srb, sra))
# x <- read.matrix.num("~/Desktop/Blerina_presentation/data/ag_losses14.txt")
# x <- matrix.ag(x, list(1:6, 7:9, 10:12))
tower1$claim(x[,1])
ag_loss$total
x[1,1]
layer_delegate <- setRefClass("layer_delegate",
methods = list(
claimed = function(amount){}
))
layer <- setRefClass("layer",
fields = list(
size = "numeric",
reinstatement = "ANY",
delegates = "list"
),
methods = list(
claim = function(amount, retention) {
this_loss <- pmin(size, pmax(amount - retention))
size <<- size - this_loss
for(d in delegates) d$claimed(this_loss)
if(!is.null(reinstatement)) {
reinstated_amount <- reinstatement$claim(this_loss, 0)
size <<- size + reinstated_amount
}
return (this_loss)
}
))
loss_aggregator <- setRefClass("loss_aggregator",
fields = list(
total = "numeric"
),
methods = list(
claimed = function(amount) {
cat(amount, "\n")
total <<- total + amount
}
),
contains = "layer_delegate")
tower <- setRefClass("tower",
fields = list(
layers = "list"
),
methods = list(
claim = function(amount) {
retention <- 0
for(i in 1:length(layers)) {
tmp_size <- layers[[i]]$size
layers[[i]]$claim(amount, retention)
retention <- retention + tmp_size
}
}
))
ag_loss <- loss_aggregator$new(total = 0)
retention1 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention2 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention3 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
jnr1 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr2 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr3 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
srb <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
sra <- layer$new(size = 25e6, reinstatement = NULL, delegates = list(ag_loss))
tower1 <- tower$new(layers = list(retention1, jnr1, srb, sra))
tower2 <- tower$new(layers = list(retention2, jnr2, srb, sra))
tower3 <- tower$new(layers = list(retention3, jnr3, srb, sra))
# x <- read.matrix.num("~/Desktop/Blerina_presentation/data/ag_losses14.txt")
# x <- matrix.ag(x, list(1:6, 7:9, 10:12))
tower1$claim(x[1,1])
layer_delegate <- setRefClass("layer_delegate",
methods = list(
claimed = function(amount){}
))
layer <- setRefClass("layer",
fields = list(
size = "numeric",
reinstatement = "ANY",
delegates = "list"
),
methods = list(
claim = function(amount, retention) {
this_loss <- pmin(size, pmax(amount - retention))
cat(this_loss, "\n")
size <<- size - this_loss
for(d in delegates) d$claimed(this_loss)
if(!is.null(reinstatement)) {
reinstated_amount <- reinstatement$claim(this_loss, 0)
size <<- size + reinstated_amount
}
return (this_loss)
}
))
loss_aggregator <- setRefClass("loss_aggregator",
fields = list(
total = "numeric"
),
methods = list(
claimed = function(amount) {
cat(amount, "\n")
total <<- total + amount
}
),
contains = "layer_delegate")
tower <- setRefClass("tower",
fields = list(
layers = "list"
),
methods = list(
claim = function(amount) {
retention <- 0
for(i in 1:length(layers)) {
tmp_size <- layers[[i]]$size
layers[[i]]$claim(amount, retention)
retention <- retention + tmp_size
}
}
))
ag_loss <- loss_aggregator$new(total = 0)
retention1 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention2 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention3 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
jnr1 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr2 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr3 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
srb <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
sra <- layer$new(size = 25e6, reinstatement = NULL, delegates = list(ag_loss))
tower1 <- tower$new(layers = list(retention1, jnr1, srb, sra))
tower2 <- tower$new(layers = list(retention2, jnr2, srb, sra))
tower3 <- tower$new(layers = list(retention3, jnr3, srb, sra))
# x <- read.matrix.num("~/Desktop/Blerina_presentation/data/ag_losses14.txt")
# x <- matrix.ag(x, list(1:6, 7:9, 10:12))
tower1$claim(x[1,1])
layer_delegate <- setRefClass("layer_delegate",
methods = list(
claimed = function(amount){}
))
layer <- setRefClass("layer",
fields = list(
size = "numeric",
reinstatement = "ANY",
delegates = "list"
),
methods = list(
claim = function(amount, retention) {
this_loss <- pmin(size, pmax(amount - retention, 0))
size <<- size - this_loss
for(d in delegates) d$claimed(this_loss)
if(!is.null(reinstatement)) {
reinstated_amount <- reinstatement$claim(this_loss, 0)
size <<- size + reinstated_amount
}
return (this_loss)
}
))
loss_aggregator <- setRefClass("loss_aggregator",
fields = list(
total = "numeric"
),
methods = list(
claimed = function(amount) {
total <<- total + amount
}
),
contains = "layer_delegate")
tower <- setRefClass("tower",
fields = list(
layers = "list"
),
methods = list(
claim = function(amount) {
retention <- 0
for(i in 1:length(layers)) {
tmp_size <- layers[[i]]$size
layers[[i]]$claim(amount, retention)
retention <- retention + tmp_size
}
}
))
ag_loss <- loss_aggregator$new(total = 0)
retention1 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention2 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
retention3 <- layer$new(size = 35e6, reinstatement = NULL, delegates = list())
jnr1 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr2 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
jnr3 <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
srb <- layer$new(size = 25e6, reinstatement = NULL, delegates = list())
sra <- layer$new(size = 25e6, reinstatement = NULL, delegates = list(ag_loss))
tower1 <- tower$new(layers = list(retention1, jnr1, srb, sra))
tower2 <- tower$new(layers = list(retention2, jnr2, srb, sra))
tower3 <- tower$new(layers = list(retention3, jnr3, srb, sra))
# x <- read.matrix.num("~/Desktop/Blerina_presentation/data/ag_losses14.txt")
# x <- matrix.ag(x, list(1:6, 7:9, 10:12))
tower1$claim(x[,1])
mean(ag_loss$total)
mean(ag_loss$total)/25e6
mean(ag_loss$total > 0)
mean(ag_loss$total == 25e6)
tower2$claim(x[,2])
mean(ag_loss$total > 0)
mean(ag_loss$total)/25e6
mean(ag_loss$total == 25e6)
tower3$claim(x[,3])
mean(ag_loss$total > 0)
mean(ag_loss$total)/25e6
mean(ag_loss$total == 25e6)
